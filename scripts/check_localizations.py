#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –º–µ–∂–¥—É –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è–º–∏.

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ (values/) –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
–≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π (values-en/) –∏ –∫–∏—Ç–∞–π—Å–∫–æ–π (values-zh-rCN/) –≤–µ—Ä—Å–∏—è—Ö.
"""

import os
import re
import xml.etree.ElementTree as ET
from pathlib import Path


def extract_strings_from_xml(file_path):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ XML —Ñ–∞–π–ª–∞ —Ä–µ—Å—É—Ä—Å–æ–≤."""
    strings = {}
    try:
        tree = ET.parse(file_path)
        root = tree.getroot()

        for string_elem in root.findall('.//string'):
            name = string_elem.get('name')
            if name:
                strings[name] = string_elem.text or ""
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ {file_path}: {e}")
        return {}

    return strings


def check_localization_sync():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–π."""
    base_path = Path(__file__).parent.parent / "ui" / "src" / "main" / "res"

    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–ø–∫–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–π
    locales = {
        'ru': 'values',
        'en': 'values-en',
        'zh': 'values-zh-rCN'
    }

    # –§–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    string_files = [
        'strings.xml',
        'strings_achievements.xml',
        'strings_dialogs.xml',
        'strings_errors.xml',
        'strings_home_common.xml',
        'strings_libraries.xml',
        'strings_profile.xml',
        'strings_recommendations.xml',
        'strings_security.xml',
        'strings_statistics.xml',
        'strings_transaction.xml'
    ]

    all_missing = []

    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–π...")
    print("=" * 60)

    for string_file in string_files:
        print(f"\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: {string_file}")
        print("-" * 40)

        # –ß–∏—Ç–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
        base_file = base_path / locales['ru'] / string_file
        if not base_file.exists():
            print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º {string_file} - —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏")
            continue

        base_strings = extract_strings_from_xml(base_file)

        if not base_strings:
            print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º {string_file} - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å—Ç—Ä–æ–∫–∏")
            continue

        print(f"üìä –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç {len(base_strings)} —Å—Ç—Ä–æ–∫")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é
        for locale_name, locale_path in locales.items():
            if locale_name == 'ru':
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é

            locale_file = base_path / locale_path / string_file
            if not locale_file.exists():
                print(f"‚ùå –§–∞–π–ª {string_file} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ {locale_name}")
                all_missing.append(f"{locale_name}: {string_file} (—Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)")
                continue

            locale_strings = extract_strings_from_xml(locale_file)
            missing_strings = []

            for string_name in base_strings:
                if string_name not in locale_strings:
                    missing_strings.append(string_name)

            if missing_strings:
                print(f"‚ùå –í {locale_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç {len(missing_strings)} —Å—Ç—Ä–æ–∫:")
                for missing in missing_strings[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    print(f"   - {missing}")
                if len(missing_strings) > 5:
                    print(f"   ... –∏ –µ—â–µ {len(missing_strings) - 5} —Å—Ç—Ä–æ–∫")

                for missing in missing_strings:
                    all_missing.append(f"{locale_name}: {string_file} -> {missing}")
            else:
                print(f"‚úÖ {locale_name}: –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã")

    print("\n" + "=" * 60)
    print("üìã –ò–¢–û–ì–ò:")

    if all_missing:
        print(f"‚ùå –ù–∞–π–¥–µ–Ω–æ {len(all_missing)} –ø—Ä–æ–±–ª–µ–º —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è–º–∏:")
        for i, missing in enumerate(all_missing[:10], 1):
            print(f"   {i}. {missing}")

        if len(all_missing) > 10:
            print(f"   ... –∏ –µ—â–µ {len(all_missing) - 10} –ø—Ä–æ–±–ª–µ–º")

        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –î–æ–±–∞–≤—å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏")
        return False
    else:
        print("‚úÖ –í—Å–µ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
        return True


if __name__ == "__main__":
    success = check_localization_sync()
    exit(0 if success else 1)
