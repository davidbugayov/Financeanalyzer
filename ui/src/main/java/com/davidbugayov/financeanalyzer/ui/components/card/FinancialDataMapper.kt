package com.davidbugayov.financeanalyzer.ui.components.card

import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.res.stringResource
import com.davidbugayov.financeanalyzer.ui.R

/**
 * üîÑ –ú–∞–ø–ø–µ—Ä –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–µ–º–∏—É–º –∫–∞—Ä—Ç–æ—á–∫–∏
 * –°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
 */
object FinancialDataMapper {

    /**
     * üìä –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
     */
    @Composable
    fun createTransactionStatistics(
        totalTransactions: Int,
        incomeTransactionsCount: Int,
        expenseTransactionsCount: Int,
        averageIncomePerTransaction: String,
        averageExpensePerTransaction: String,
        maxIncome: String,
        maxExpense: String,
        savingsRate: Float,
        monthsOfSavings: Float
    ): List<StatisticItem> {
        return listOf(
            StatisticItem(
                label = "–í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π",
                value = totalTransactions.toString(),
                description = "–ó–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥",
                icon = Icons.Default.Receipt,
                type = StatisticType.NEUTRAL
            ),
            StatisticItem(
                label = "–û–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ—Ö–æ–¥–æ–≤",
                value = incomeTransactionsCount.toString(),
                description = "${(incomeTransactionsCount.toFloat() / totalTransactions * 100).toInt()}% –æ—Ç –æ–±—â–µ–≥–æ",
                icon = Icons.Default.TrendingUp,
                type = StatisticType.POSITIVE
            ),
            StatisticItem(
                label = "–û–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤", 
                value = expenseTransactionsCount.toString(),
                description = "${(expenseTransactionsCount.toFloat() / totalTransactions * 100).toInt()}% –æ—Ç –æ–±—â–µ–≥–æ",
                icon = Icons.Default.TrendingDown,
                type = StatisticType.NEGATIVE
            ),
            StatisticItem(
                label = "–°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥",
                value = averageIncomePerTransaction,
                description = "–ù–∞ –æ–ø–µ—Ä–∞—Ü–∏—é",
                icon = Icons.Default.AttachMoney,
                type = StatisticType.POSITIVE
            ),
            StatisticItem(
                label = "–°—Ä–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥",
                value = averageExpensePerTransaction,
                description = "–ù–∞ –æ–ø–µ—Ä–∞—Ü–∏—é", 
                icon = Icons.Default.Money,
                type = StatisticType.NEGATIVE
            ),
            StatisticItem(
                label = "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥",
                value = maxIncome,
                description = "–°–∞–º–∞—è –∫—Ä—É–ø–Ω–∞—è —Å—É–º–º–∞",
                icon = Icons.Default.Star,
                type = StatisticType.POSITIVE
            ),
            StatisticItem(
                label = "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞—Å—Ö–æ–¥",
                value = maxExpense,
                description = "–°–∞–º–∞—è –∫—Ä—É–ø–Ω–∞—è —Ç—Ä–∞—Ç–∞",
                icon = Icons.Default.Warning,
                type = if (maxExpense.replace(Regex("[^\\d.]"), "").toFloatOrNull() ?: 0f > 50000f) 
                    StatisticType.WARNING else StatisticType.NEGATIVE
            ),
            StatisticItem(
                label = "–ù–æ—Ä–º–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π",
                value = "${savingsRate.toInt()}%",
                description = "–û—Ç –æ–±—â–µ–≥–æ –¥–æ—Ö–æ–¥–∞",
                icon = Icons.Default.Savings,
                type = when {
                    savingsRate >= 20f -> StatisticType.POSITIVE
                    savingsRate >= 10f -> StatisticType.WARNING
                    else -> StatisticType.NEGATIVE
                }
            ),
            StatisticItem(
                label = "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞",
                value = "${monthsOfSavings.toInt()} –º–µ—Å",
                description = "–ù–∞ —Ç–µ–∫—É—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã",
                icon = Icons.Default.Shield,
                type = when {
                    monthsOfSavings >= 6f -> StatisticType.POSITIVE
                    monthsOfSavings >= 3f -> StatisticType.WARNING
                    else -> StatisticType.NEGATIVE
                }
            )
        )
    }

    /**
     * üìà –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
     */
    @Composable
    fun createExpenseAnalysis(
        averageDailyExpense: String,
        averageMonthlyExpense: String,
        topIncomeCategory: String,
        topExpenseCategory: String,
        topExpenseCategories: List<Pair<String, String>>,
        mostFrequentExpenseDay: String
    ): List<StatisticItem> {
        val statistics = mutableListOf<StatisticItem>()
        
        statistics.add(
            StatisticItem(
                label = "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
                value = averageDailyExpense,
                description = "–í —Å—Ä–µ–¥–Ω–µ–º –∑–∞ –¥–µ–Ω—å",
                icon = Icons.Default.CalendarToday,
                type = StatisticType.NEUTRAL
            )
        )
        
        statistics.add(
            StatisticItem(
                label = "–ú–µ—Å—è—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
                value = averageMonthlyExpense,
                description = "–í —Å—Ä–µ–¥–Ω–µ–º –∑–∞ –º–µ—Å—è—Ü",
                icon = Icons.Default.DateRange,
                type = StatisticType.NEUTRAL
            )
        )
        
        if (topIncomeCategory.isNotEmpty()) {
            statistics.add(
                StatisticItem(
                    label = "–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ—Ö–æ–¥",
                    value = topIncomeCategory,
                    description = "–ì–ª–∞–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫",
                    icon = Icons.Default.AccountBalance,
                    type = StatisticType.POSITIVE
                )
            )
        }
        
        if (topExpenseCategory.isNotEmpty()) {
            statistics.add(
                StatisticItem(
                    label = "–û—Å–Ω–æ–≤–Ω–æ–π —Ä–∞—Å—Ö–æ–¥",
                    value = topExpenseCategory,
                    description = "–ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ç—Ä–∞—Ç–∏—Ç–µ",
                    icon = Icons.Default.PieChart,
                    type = StatisticType.WARNING
                )
            )
        }
        
        if (mostFrequentExpenseDay.isNotEmpty()) {
            statistics.add(
                StatisticItem(
                    label = "–ê–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å",
                    value = mostFrequentExpenseDay,
                    description = "–ß–∞—â–µ –≤—Å–µ–≥–æ —Ç—Ä–∞—Ç–∏—Ç–µ",
                    icon = Icons.Default.Schedule,
                    type = StatisticType.NEUTRAL
                )
            )
        }
        
        return statistics
    }

    /**
     * üîç –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å–∞–π—Ç–æ–≤ —Ä–∞—Å—Ö–æ–¥–æ–≤
     */
    @Composable
    fun createExpenseInsights(
        topExpenseCategories: List<Pair<String, String>>,
        savingsRate: Float,
        monthsOfSavings: Float,
        totalTransactions: Int,
        mostFrequentExpenseDay: String
    ): List<InsightItem> {
        val insights = mutableListOf<InsightItem>()
        
        // –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∞—Å—Ö–æ–¥–æ–≤
        if (topExpenseCategories.isNotEmpty()) {
            val topCategory = topExpenseCategories.first()
            val totalExpense = topExpenseCategories.sumOf { 
                it.second.replace(Regex("[^\\d.]"), "").toDoubleOrNull() ?: 0.0 
            }
            val percentage = if (totalExpense > 0) {
                (((topCategory.second.replace(Regex("[^\\d.]"), "").toDoubleOrNull() ?: 0.0) / totalExpense) * 100).toInt()
            } else 0
            
            insights.add(
                InsightItem(
                    title = "–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤",
                    description = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è \"${topCategory.first}\" —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${percentage}% –≤–∞—à–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤. ${
                        when {
                            percentage > 50 -> "–≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–Ω–æ–≥–æ - —Å—Ç–æ–∏—Ç –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞—Ç—ã"
                            percentage > 30 -> "–î–æ–≤–æ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∞—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å"
                            else -> "–•–æ—Ä–æ—à–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
                        }
                    }",
                    metric = "${percentage}% –≤ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
                    icon = Icons.Default.PieChart,
                    importance = when {
                        percentage > 50 -> InsightImportance.HIGH
                        percentage > 30 -> InsightImportance.MEDIUM
                        else -> InsightImportance.LOW
                    }
                )
            )
        }
        
        // –ê–Ω–∞–ª–∏–∑ –Ω–æ—Ä–º—ã —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π
        insights.add(
            InsightItem(
                title = "–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ",
                description = when {
                    savingsRate >= 20f -> "–û—Ç–ª–∏—á–Ω–∞—è –Ω–æ—Ä–º–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π! –í—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏ –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
                    savingsRate >= 15f -> "–•–æ—Ä–æ—à–∞—è –Ω–æ—Ä–º–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–≤–µ—Å—Ç–∏ –¥–æ 20% –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"
                    savingsRate >= 10f -> "–ù–µ–ø–ª–æ—Ö–æ, –Ω–æ –µ—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è. –≠–∫—Å–ø–µ—Ä—Ç—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å 15-20%"
                    savingsRate >= 5f -> "–ù–∏–∑–∫–∞—è –Ω–æ—Ä–º–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ 10% –∫–∞–∫ –º–∏–Ω–∏–º—É–º"
                    else -> "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ä–æ—á–Ω–æ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –±—é–¥–∂–µ—Ç"
                },
                metric = "${savingsRate.toInt()}% –æ—Ç –¥–æ—Ö–æ–¥–∞",
                icon = when {
                    savingsRate >= 15f -> Icons.Default.TrendingUp
                    savingsRate >= 10f -> Icons.Default.Balance
                    else -> Icons.Default.Warning
                },
                importance = when {
                    savingsRate < 5f -> InsightImportance.HIGH
                    savingsRate < 15f -> InsightImportance.MEDIUM
                    else -> InsightImportance.LOW
                }
            )
        )
        
        // –ê–Ω–∞–ª–∏–∑ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–æ–¥—É—à–∫–∏
        insights.add(
            InsightItem(
                title = "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∑–∞—â–∏—Ç–∞",
                description = when {
                    monthsOfSavings >= 6f -> "–£ –≤–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞! –í—ã –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π"
                    monthsOfSavings >= 3f -> "–•–æ—Ä–æ—à–∞—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞. –î–ª—è –ø–æ–ª–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 6 –º–µ—Å—è—Ü–µ–≤ —Ä–∞—Å—Ö–æ–¥–æ–≤"
                    monthsOfSavings >= 1f -> "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∑–∞—â–∏—Ç–∞. –°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ 3-6 –º–µ—Å—è—Ü–∞–º —Ä–∞—Å—Ö–æ–¥–æ–≤ –≤ —Ä–µ–∑–µ—Ä–≤–µ"
                    else -> "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥—É—à–∫–∞. –≠—Ç–æ –æ—á–µ–Ω—å —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω–æ - –ª—é–±–∞—è –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π"
                },
                metric = "${monthsOfSavings.toInt()} –º–µ—Å. —Ä–∞—Å—Ö–æ–¥–æ–≤",
                icon = when {
                    monthsOfSavings >= 3f -> Icons.Default.Shield
                    monthsOfSavings >= 1f -> Icons.Default.Security
                    else -> Icons.Default.Warning
                },
                importance = when {
                    monthsOfSavings < 1f -> InsightImportance.HIGH
                    monthsOfSavings < 3f -> InsightImportance.MEDIUM
                    else -> InsightImportance.LOW
                }
            )
        )
        
        // –ê–Ω–∞–ª–∏–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        if (totalTransactions > 100) {
            insights.add(
                InsightItem(
                    title = "–ß–∞—Å—Ç–æ—Ç–∞ —Ç—Ä–∞—Ç",
                    description = "–£ –≤–∞—Å –º–Ω–æ–≥–æ –º–µ–ª–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π ($totalTransactions). –≠—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –∏–º–ø—É–ª—å—Å–∏–≤–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ –∏ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –ø–æ–∫—É–ø–∫–∏.",
                    metric = "$totalTransactions –æ–ø–µ—Ä–∞—Ü–∏–π",
                    icon = Icons.Default.ShoppingCart,
                    importance = if (totalTransactions > 200) InsightImportance.MEDIUM else InsightImportance.LOW
                )
            )
        }
        
        // –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Ç—Ä–∞—Ç
        if (mostFrequentExpenseDay.isNotEmpty()) {
            insights.add(
                InsightItem(
                    title = "–ü–∞—Ç—Ç–µ—Ä–Ω —Ä–∞—Å—Ö–æ–¥–æ–≤",
                    description = "–í—ã —á–∞—â–µ –≤—Å–µ–≥–æ —Ç—Ä–∞—Ç–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –ø–æ $mostFrequentExpenseDay. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π, –≤—ã—Ö–æ–¥–Ω—ã–º–∏ –∏–ª–∏ —Ä–∞—Å–ø–æ—Ä—è–¥–∫–æ–º –¥–Ω—è. –ü–æ–Ω–∏–º–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –ø–æ–º–æ–∂–µ—Ç –ª—É—á—à–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç.",
                    metric = "–ü–∏–∫: $mostFrequentExpenseDay",
                    icon = Icons.Default.Timeline,
                    importance = InsightImportance.LOW
                )
            )
        }
        
        return insights
    }

    /**
     * üìã –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å–∞–π—Ç–æ–≤ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Ç—Ä–∞—Ç
     */
    @Composable 
    fun createSpendingPatternInsights(
        mostFrequentExpenseDay: String,
        expenseTransactionsCount: Int,
        averageExpensePerTransaction: Float
    ): List<InsightItem> {
        val insights = mutableListOf<InsightItem>()
        
        if (mostFrequentExpenseDay.isNotEmpty()) {
            insights.add(
                InsightItem(
                    title = "–ê–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏",
                    description = "–ü–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ, $mostFrequentExpenseDay - –≤–∞—à —Å–∞–º—ã–π \"–¥–æ—Ä–æ–≥–æ–π\" –¥–µ–Ω—å. –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –±—é–¥–∂–µ—Ç —Å —É—á–µ—Ç–æ–º —ç—Ç–æ–≥–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞.",
                    metric = "–ü–∏–∫: $mostFrequentExpenseDay",
                    icon = Icons.Default.CalendarToday,
                    importance = InsightImportance.LOW
                )
            )
        }
        
        // –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ —Ç—Ä–∞—Ç
        when {
            averageExpensePerTransaction < 500f -> {
                insights.add(
                    InsightItem(
                        title = "–ú–µ–ª–∫–∏–µ —á–∞—Å—Ç—ã–µ —Ç—Ä–∞—Ç—ã",
                        description = "–í–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã —Å–æ—Å—Ç–æ—è—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–∑ –º–µ–ª–∫–∏—Ö –ø–æ–∫—É–ø–æ–∫. –≠—Ç–æ —Ö–æ—Ä–æ—à–æ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è, –Ω–æ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –∏—Ö –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ–º.",
                        metric = "–°—Ä–µ–¥–Ω—è—è —Ç—Ä–∞—Ç–∞: ${averageExpensePerTransaction.toInt()}‚ÇΩ",
                        icon = Icons.Default.LocalGroceryStore,
                        importance = InsightImportance.LOW
                    )
                )
            }
            averageExpensePerTransaction > 2000f -> {
                insights.add(
                    InsightItem(
                        title = "–ö—Ä—É–ø–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏",
                        description = "–£ –≤–∞—Å –ø—Ä–µ–æ–±–ª–∞–¥–∞—é—Ç –∫—Ä—É–ø–Ω—ã–µ —Ç—Ä–∞—Ç—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–∞–∂–¥–∞—è —Ç–∞–∫–∞—è –ø–æ–∫—É–ø–∫–∞ —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–¥—É–º–∞–Ω–∞.",
                        metric = "–°—Ä–µ–¥–Ω—è—è —Ç—Ä–∞—Ç–∞: ${averageExpensePerTransaction.toInt()}‚ÇΩ",
                        icon = Icons.Default.ShoppingBag,
                        importance = InsightImportance.MEDIUM
                    )
                )
            }
        }
        
        // –ê–Ω–∞–ª–∏–∑ —á–∞—Å—Ç–æ—Ç—ã —Ç—Ä–∞—Ç
        if (expenseTransactionsCount > 150) {
            insights.add(
                InsightItem(
                    title = "–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
                    description = "–£ –≤–∞—Å –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π —Ä–∞—Å—Ö–æ–¥–æ–≤ ($expenseTransactionsCount). –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–æ–∫.",
                    metric = "$expenseTransactionsCount –æ–ø–µ—Ä–∞—Ü–∏–π",
                    icon = Icons.Default.Speed,
                    importance = InsightImportance.MEDIUM
                )
            )
        }
        
        return insights
    }
}